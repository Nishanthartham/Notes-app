[{"/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/index.js":"1","/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/App.js":"2","/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/Todo.js":"3","/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/AddToDoItem.js":"4","/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/Navbar.jsx":"5","/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/Footer.jsx":"6","/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/TodoItem.js":"7"},{"size":591,"mtime":1639063253151,"results":"8","hashOfConfig":"9"},{"size":1626,"mtime":1647251645396,"results":"10","hashOfConfig":"9"},{"size":653,"mtime":1647028603619,"results":"11","hashOfConfig":"9"},{"size":1288,"mtime":1647251811119,"results":"12","hashOfConfig":"9"},{"size":2555,"mtime":1647022943789,"results":"13","hashOfConfig":"9"},{"size":289,"mtime":1647251714613,"results":"14","hashOfConfig":"9"},{"size":494,"mtime":1647248976009,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pt1b61",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/index.js",[],"/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/App.js",[],"/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/Todo.js",[],"/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/AddToDoItem.js",[],"/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/Navbar.jsx",["31","32","33","34","35","36","37","38"],"import React from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport default function Navbar(props) {\n  return (\n    <div>\n\n\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">Link</a>\n              </li>\n              <li className=\"nav-item dropdown\">\n                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Dropdown\n                </a>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\n                  <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\n                  <li><hr className=\"dropdown-divider\" /></li>\n                  <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                </ul>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link disabled\">Disabled</a>\n              </li>\n            </ul>\n            \n            {props.SearchBar ?<form className=\"d-flex\">\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n            </form>: <span>No search bar for now!!</span>}\n            \n          </div>\n        </div>\n      </nav>\n      <p>This is my {props.title} project from Navbar.js</p>\n\n    </div>\n  )\n}\n\nNavbar.defaultProps = {\n  title : \"Enter your own title \",\n  SearchBar : true\n}\n\n\nNavbar.propTypes = {\n  title : PropTypes.string,\n  SearchBar : PropTypes.bool\n}\n//propTypes to make sure only values are sent in the mentioned data types else it throws error in console","/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/Footer.jsx",[],"/Users/arthamnishanth/Desktop/folders/React-practice/Notes/src/components/TodoItem.js",[],{"ruleId":"39","severity":1,"message":"40","line":12,"column":11,"nodeType":"41","endLine":12,"endColumn":48},{"ruleId":"39","severity":1,"message":"40","line":19,"column":17,"nodeType":"41","endLine":19,"endColumn":77},{"ruleId":"39","severity":1,"message":"40","line":22,"column":17,"nodeType":"41","endLine":22,"endColumn":50},{"ruleId":"39","severity":1,"message":"40","line":25,"column":17,"nodeType":"41","endLine":25,"endColumn":148},{"ruleId":"39","severity":1,"message":"40","line":29,"column":23,"nodeType":"41","endLine":29,"endColumn":61},{"ruleId":"39","severity":1,"message":"40","line":30,"column":23,"nodeType":"41","endLine":30,"endColumn":61},{"ruleId":"39","severity":1,"message":"40","line":32,"column":23,"nodeType":"41","endLine":32,"endColumn":61},{"ruleId":"39","severity":1,"message":"42","line":36,"column":17,"nodeType":"41","endLine":36,"endColumn":50},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]